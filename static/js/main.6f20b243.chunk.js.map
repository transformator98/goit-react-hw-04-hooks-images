{"version":3,"sources":["App.module.css","component/ImageGalleryItem/ImageGalleryItem.module.css","component/Modal/Modal.module.css","component/Loader/Loader.module.css","component/Button/Button.module.css","component/ImageGalleryItem/ImageGalleryItem.js","component/ImageGallery/ImageGallery.js","component/Searchbar/Searchbar.js","component/Loader/pending.png","component/Loader/Loader.js","component/Modal/Modal.js","component/ImageGallery/ImageErrorView.js","component/Button/Button.js","services/imageGallery-api.js","App.js","index.js","component/Searchbar/Searchbar.module.css","component/ImageGallery/ImageGallery.module.css"],"names":["module","exports","ImageGalleryItem","webformatURL","largeImageURL","tags","imageClick","className","s","imageGalleryItem","src","data-sourse","alt","image","onClick","ImageGallery","images","largeURL","imageGallery","map","index","Searchbar","onSubmit","useState","imageName","setImageName","searchbar","event","preventDefault","trim","toast","error","searchForm","type","button","label","value","onChange","target","toLowerCase","input","autoComplete","autoFocus","placeholder","ImagePendingView","loader","color","height","width","stules","Array","fill","item","pendingImage","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","code","createPortal","overlay","currentTarget","modal","ImageErrorView","message","propTypes","PropTypes","string","Button","api","page","fetchGallery","name","url","this","fetch","then","responce","ok","json","Promise","reject","Error","resetPage","Status","App","setLargeImageURL","setImages","total","setTotal","setError","status","setStatus","isLoading","setIsLoading","scrollPage","scrollTo","top","documentElement","scrollHeight","behavior","app","galleryAPI","text","imagesClick","nodeName","dataset","sourse","length","hits","state","catch","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6f20b243.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__29Y6w\",\"text\":\"App_text__2sfJ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__EX8zR\",\"image\":\"ImageGalleryItem_image__2eH9t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2pYgl\",\"modal\":\"Modal_modal__1UoM6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3zcn3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2yY0C\"};","import s from './ImageGalleryItem.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({\n  webformatURL = 'https://picsum.photos/600/400',\n  largeImageURL = 'https://picsum.photos/600/400',\n  tags,\n  imageClick,\n}) {\n  return (\n    <li className={s.imageGalleryItem}>\n      <img\n        src={webformatURL}\n        data-sourse={largeImageURL}\n        alt={tags}\n        className={s.image}\n        onClick={imageClick}\n      />\n    </li>\n  );\n}\nImageGalleryItem.propTypes = {\n  tags: PropTypes.string,\n  webformatURL: PropTypes.string,\n  largeImageURL: PropTypes.string,\n  imageClick: PropTypes.func,\n};\n","import s from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nconst ImageGallery = ({ images, largeURL }) => {\n  return (\n    <ul className={s.imageGallery}>\n      {images.map((image, index) => (\n        <ImageGalleryItem\n          key={index}\n          webformatURL={image.webformatURL}\n          largeImageURL={image.largeImageURL}\n          tags={image.tags}\n          imageClick={largeURL}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array,\n  // images: PropTypes.arrayOf(\n  //   PropTypes.shape({\n  //     index: PropTypes.number.isRequired,\n  //   }),\n  // ),\n  largeURL: PropTypes.func,\n};\nexport default ImageGallery;\n","// import { Component } from 'react';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nimport s from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [imageName, setImageName] = useState('');\n\n  const handleNameChange = event => {\n    setImageName(event.target.value.toLowerCase());\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (imageName.trim() === '') {\n      toast.error('Введите текст для поиска');\n      return;\n    }\n\n    onSubmit(imageName);\n    setImageName('');\n  };\n\n  return (\n    <header className={s.searchbar}>\n      <form onSubmit={handleSubmit} className={s.searchForm}>\n        <button type=\"submit\" className={s.button}>\n          <span className={s.label}>Search</span>\n        </button>\n        <input\n          value={imageName}\n          onChange={handleNameChange}\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  imageName: PropTypes.string,\n};\n","export default __webpack_public_path__ + \"static/media/pending.d3fe10c8.png\";","import s from './Loader.module.css';\nimport stules from '../ImageGallery/ImageGallery.module.css';\nimport Loader from 'react-loader-spinner';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport pendingImage from './pending.png';\n\nexport default function ImagePendingView() {\n  return (\n    <>\n      <Loader\n        className={s.loader}\n        type=\"Circles\"\n        color=\"#3ccf9e\"\n        height={30}\n        width={30}\n      />\n      <>\n        <ul className={stules.imageGallery}>\n          {Array(12)\n            .fill()\n            .map((item, index) => (\n              <ImageGalleryItem\n                key={index}\n                webformatURL={pendingImage}\n                largeImageURL={pendingImage}\n              />\n            ))}\n        </ul>\n      </>\n    </>\n  );\n}\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, children }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n  });\n\n  const handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.overlay} onClick={handleBackdropClick}>\n      <div className={s.modal}>{children}</div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n};\n","import { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nexport default function ImageErrorView({ message }) {\n  return toast.error(`${message}`);\n}\n\nImageErrorView.propTypes = {\n  message: PropTypes.string,\n};\n","import s from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Button({ onClick }) {\n  return (\n    <button className={s.button} type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n","const apiKey = '18773643-f1542c573d467a3c4fb890edb';\n\nconst api = {\n  page: 1,\n\n  fetchGallery(name) {\n    const url = `https://pixabay.com/api/?q=${name}&page=${this.page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`;\n\n    return fetch(url).then(responce => {\n      this.page += 1;\n\n      if (responce.ok) {\n        return responce.json();\n      }\n      return Promise.reject(new Error(`Нет картинок по запросу ${name}`));\n    });\n  },\n  resetPage() {\n    this.page = 1;\n  },\n};\n\nexport default api;\n","// import { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast } from 'react-toastify';\n\nimport s from './App.module.css';\n\nimport ImageGallery from './component/ImageGallery';\nimport Searchbar from './component/Searchbar';\nimport Loader from './component/Loader';\nimport Modal from './component/Modal/';\nimport ImageErrorView from './component/ImageGallery/ImageErrorView';\nimport Button from './component/Button';\n\nimport galleryAPI from './services/imageGallery-api';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default function App() {\n  const [imageName, setImageName] = useState('');\n  const [largeImageURL, setLargeImageURL] = useState('');\n  const [images, setImages] = useState([]);\n  const [total, setTotal] = useState(null);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleFormSubmit = imageName => {\n    galleryAPI.resetPage();\n\n    setImageName(imageName);\n  };\n\n  const toggleModal = () => {\n    setLargeImageURL('');\n    // this.setState({ largeImageURL: '' });\n  };\n\n  const largeImgModal = event => {\n    const imagesClick = event.target;\n\n    if (imagesClick.nodeName !== 'IMG') {\n      return;\n    }\n\n    const largeURL = imagesClick.dataset.sourse;\n    setLargeImageURL(largeURL);\n  };\n\n  // useEffect(() => {\n  //   if (prevState.imageName !== imageName) {\n  //     setStatus(Status.PENDING);\n  //     setImages([]);\n  //     setPage(1);\n  //   }\n\n  //   fetchApiGallery();\n  // }, [imageName]);\n\n  const fetchApiGallery = () => {\n    galleryAPI\n      .fetchGallery(imageName, page)\n\n      .then(({ hits, total }) => {\n        if (hits.length === 0) {\n          toast.error('По вашему запросу нет нужного результата!');\n        }\n        setImages(state => [...state, ...hits]);\n        setTotal(total);\n        setIsLoading(false);\n        setStatus(Status.RESOLVED);\n\n        scrollPage();\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  };\n\n  const scrollPage = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n  const onLoadMore = () => {\n    setIsLoading(true);\n\n    fetchApiGallery();\n  };\n\n  return (\n    <div className={s.app}>\n      <Searchbar onSubmit={handleFormSubmit} />\n      {status === 'idle' && (\n        <div className={s.text}>Введите текст для поиска</div>\n      )}\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && <ImageErrorView message={error.message} />}\n      {total > 1 && status === 'resolved' && (\n        <ImageGallery images={images} largeURL={largeImgModal} />\n      )}\n      {largeImageURL && (\n        <Modal onClose={toggleModal}>\n          <img src={largeImageURL} alt={imageName} />\n        </Modal>\n      )}\n      {isLoading && <Loader />}\n      {total > images.length && !isLoading && <Button onClick={onLoadMore} />}\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n\n// TODO rafactoring Component Start\n// export default class App extends Component {\n//   state = {\n//     imageName: '',\n//     largeImageURL: '',\n//     images: [],\n//     total: null,\n\n//     //TODO START перенос из ImageGallary\n//     page: 1,\n//     error: null,\n//     status: Status.IDLE,\n//     isLoading: false,\n//   };\n\n//   handleFormSubmit = imageName => {\n//     galleryAPI.resetPage();\n\n//     this.setState({ imageName });\n//   };\n\n//   toggleModal = () => {\n//     this.setState({ largeImageURL: '' });\n//   };\n\n//   largeImgModal = event => {\n//     const imagesClick = event.target;\n\n//     if (imagesClick.nodeName !== 'IMG') {\n//       return;\n//     }\n\n//     const largeURL = imagesClick.dataset.sourse;\n//     this.setState(({ largeImageURL }) => ({\n//       largeImageURL: largeURL,\n//     }));\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const prevName = prevState.imageName;\n//     const nextName = this.state.imageName;\n\n//     if (prevName !== nextName) {\n//       this.setState({ status: Status.PENDING, images: [], page: 1 });\n\n//       this.fetchApiGallery();\n//     }\n//   }\n\n//   fetchApiGallery = () => {\n//     const { page } = this.state;\n//     const { imageName } = this.state;\n\n//     galleryAPI\n//       .fetchGallery(imageName, page)\n\n//       .then(({ hits, total }) => {\n//         if (hits.length === 0) {\n//           toast.error('По вашему запросу нет нужного результата!');\n//         }\n//         this.setState({\n//           images: [...this.state.images, ...hits],\n//           total,\n//           isLoading: false,\n//           status: Status.RESOLVED,\n//         });\n//         this.scrollPage();\n//       })\n//       .catch(error => this.setState({ error, status: Status.REJECTED }));\n//   };\n//   scrollPage = () => {\n//     window.scrollTo({\n//       top: document.documentElement.scrollHeight,\n//       behavior: 'smooth',\n//     });\n//   };\n//   onLoadMore = () => {\n//     this.setState({ isLoading: true });\n//     this.fetchApiGallery();\n//   };\n\n//   render() {\n//     const {\n//       largeImageURL,\n//       imageName,\n//       images,\n//       error,\n//       status,\n//       total,\n//     } = this.state;\n\n//     return (\n//       <div className={s.app}>\n//         <Searchbar onSubmit={this.handleFormSubmit} />\n//         {status === 'idle' && (\n//           <div className={s.text}>Введите текст для поиска</div>\n//         )}\n//         {status === 'pending' && <Loader />}\n//         {status === 'rejected' && <ImageErrorView message={error.message} />}\n//         {total > 1 && status === 'resolved' && (\n//           <ImageGallery images={images} largeURL={this.largeImgModal} />\n//         )}\n//         {largeImageURL && (\n//           <Modal onClose={this.toggleModal}>\n//             <img src={largeImageURL} alt={imageName} />\n//           </Modal>\n//         )}\n//         {this.state.isLoading && <Loader />}\n//         {total > images.length && !this.state.isLoading && (\n//           <Button onClick={this.onLoadMore} />\n//         )}\n//         <ToastContainer autoClose={3000} />\n//       </div>\n//     );\n//   }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__1fCoM\",\"searchForm\":\"Searchbar_searchForm__TBh7S\",\"button\":\"Searchbar_button__1z0Xa\",\"label\":\"Searchbar_label__Jq4Py\",\"input\":\"Searchbar_input__197LH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__2HkzL\"};"],"sourceRoot":""}